<launch>

  <arg name="agent"  default="$(env AGENT)" />
  <arg name="camera" default="false" /> <!-- don't need the asus for gmapping -->

  <!-- gmapping map args -->
  <arg name="map_res" default="0.05"/> <!-- map resolution -->
  <arg name="xmin"    default="-50"/>  <!-- initial map min bound in x -->
  <arg name="ymin"    default="-50"/>  <!-- initial map min bound in y -->
  <arg name="xmax"    default="50"/>   <!-- initial map max bound in x -->
  <arg name="ymax"    default="50"/>   <!-- initial map max bound in y -->

  <!-- scarab components -->
  <include file="$(find scarab)/launch/scarab.launch">
    <arg name="agent"      value="$(arg agent)" />
    <arg name="camera"     value="$(arg camera)" />
    <arg name="hokuyo"     value="true" />
    <arg name="laser_odom" value="true" />
  </include>

  <!-- gmapping -->
  <include file="$(find scarab)/launch/gmapping.launch">
    <arg name="agent"   value="$(arg agent)" />
    <arg name="map_res" value="$(arg map_res)"/>
    <arg name="xmin"    value="$(arg xmin)"/>
    <arg name="ymin"    value="$(arg ymin)"/>
    <arg name="xmax"    value="$(arg xmax)"/>
    <arg name="ymax"    value="$(arg ymax)"/>
  </include>

  <!-- publish robot pose from tf tree -->
  <node name="pose_pub"
        pkg="hfn"
        type="tf_posestamped_node.py"
        output="screen"
        ns="$(arg agent)">
    <param name="base_frame_id" value="$(arg agent)/base_link"/>
    <param name="map_frame_id" value="$(arg agent)/map"/>
    <remap from="pose" to="pose" />
  </node>

</launch>
